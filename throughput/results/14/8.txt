BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'ALGERIA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'AFRICA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'LARGE ANODIZED NICKEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2185265.69..2185267.52 rows=733 width=38) (actual time=29592.688..29592.688 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=751599 read=253687 dirtied=3449 written=423
   ->  HashAggregate  (cost=2185217.98..2185230.81 rows=733 width=38) (actual time=29592.608..29592.609 rows=2 loops=1)
         Buffers: shared hit=751596 read=253687 dirtied=3449 written=423
         ->  Nested Loop  (cost=503475.46..2184723.48 rows=24725 width=38) (actual time=20369.943..29521.330 rows=24130 loops=1)
               Buffers: shared hit=751596 read=253687 dirtied=3449 written=423
               ->  Nested Loop  (cost=503475.46..2177671.91 rows=24725 width=16) (actual time=20369.858..29325.471 rows=24130 loops=1)
                     Buffers: shared hit=703336 read=253687 dirtied=3449 written=423
                     ->  Hash Join  (cost=503475.46..2170471.95 rows=24725 width=16) (actual time=20369.814..28925.058 rows=24130 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=630816 read=253687 dirtied=3449 written=423
                           ->  Nested Loop  (cost=0.00..1664717.70 rows=406308 width=16) (actual time=0.524..7325.032 rows=397849 loops=1)
                                 Buffers: shared hit=229287 read=239313 dirtied=3449 written=423
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46462.06 rows=13373 width=4) (actual time=0.441..232.005 rows=13245 loops=1)
                                       Index Cond: (p_type = 'LARGE ANODIZED NICKEL'::text)
                                       Heap Fetches: 13245
                                       Buffers: shared hit=2813 read=8582 written=17
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.70 rows=31 width=20) (actual time=0.052..0.520 rows=30 loops=13245)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=226474 read=230731 dirtied=3449 written=406
                           ->  Hash  (cost=491917.33..491917.33 rows=924650 width=8) (actual time=20368.330..20368.330 rows=912000 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35625kB
                                 Buffers: shared hit=401526 read=14374
                                 ->  Hash Join  (cost=139424.92..491917.33 rows=924650 width=8) (actual time=4375.200..19382.493 rows=912000 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=401526 read=14374
                                       ->  Bitmap Heap Scan on orders  (cost=100394.29..426303.03 rows=4623249 width=12) (actual time=3152.670..7098.050 rows=4561702 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=256215 read=13536
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..99238.48 rows=4623249 width=0) (actual time=3004.962..3004.962 rows=4616605 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared read=13191
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1222.036..1222.036 rows=299493 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10530kB
                                             Buffers: shared hit=145311 read=838
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=34.122..1052.670 rows=299493 loops=1)
                                                   Buffers: shared hit=145311 read=838
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.044..0.101 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.021 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.021..0.021 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.015..0.018 rows=1 loops=1)
                                                                     Filter: (r_name = 'AFRICA'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=30.159..192.304 rows=59899 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=145309 read=838
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=20.386..20.386 rows=59899 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=8 read=825
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.014..0.014 rows=1 loops=24130)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=72520
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.005..0.005 rows=1 loops=24130)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=48260
 Total runtime: 29608.743 ms
(64 rows)

COMMIT;
COMMIT
