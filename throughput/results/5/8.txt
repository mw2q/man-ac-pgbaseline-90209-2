BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'UNITED KINGDOM' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'STANDARD PLATED COPPER'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2168027.09..2168028.92 rows=733 width=38) (actual time=38380.097..38380.097 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=728175 read=279524 dirtied=2481 written=40911
   ->  HashAggregate  (cost=2167979.38..2167992.21 rows=733 width=38) (actual time=38380.021..38380.022 rows=2 loops=1)
         Buffers: shared hit=728172 read=279524 dirtied=2481 written=40911
         ->  Nested Loop  (cost=502555.99..2167491.26 rows=24406 width=38) (actual time=26099.278..38299.058 rows=24471 loops=1)
               Buffers: shared hit=728172 read=279524 dirtied=2481 written=40911
               ->  Nested Loop  (cost=502555.99..2160530.67 rows=24406 width=16) (actual time=26099.201..37975.964 rows=24471 loops=1)
                     Buffers: shared hit=679230 read=279524 dirtied=2481 written=40911
                     ->  Hash Join  (cost=502555.99..2153423.59 rows=24406 width=16) (actual time=26099.144..37449.224 rows=24471 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=605675 read=279524 dirtied=2481 written=40911
                           ->  Nested Loop  (cost=0.00..1648618.16 rows=401075 width=16) (actual time=0.509..9973.040 rows=399080 loops=1)
                                 Buffers: shared hit=223765 read=246035 dirtied=2481 written=40911
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46027.51 rows=13227 width=4) (actual time=0.399..322.586 rows=13284 loops=1)
                                       Index Cond: (p_type = 'STANDARD PLATED COPPER'::text)
                                       Heap Fetches: 13284
                                       Buffers: shared hit=2208 read=9277 written=1899
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.85 rows=31 width=20) (actual time=0.065..0.709 rows=30 loops=13284)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=221557 read=236758 dirtied=2481 written=39012
                           ->  Hash  (cost=491020.67..491020.67 rows=922826 width=8) (actual time=26094.762..26094.762 rows=913882 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35699kB
                                 Buffers: shared hit=381907 read=33489
                                 ->  Hash Join  (cost=139223.45..491020.67 rows=922826 width=8) (actual time=6395.738..25405.296 rows=913882 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=381907 read=33489
                                       ->  Bitmap Heap Scan on orders  (cost=100192.83..425458.80 rows=4614131 width=12) (actual time=4234.771..11328.336 rows=4561778 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=237933 read=31286
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..99039.30 rows=4614131 width=0) (actual time=4106.032..4106.032 rows=4607485 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared read=13165
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=2160.700..2160.700 rows=300963 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10581kB
                                             Buffers: shared hit=143974 read=2203
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=48.808..1963.947 rows=300963 loops=1)
                                                   Buffers: shared hit=143974 read=2203
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.045..0.126 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.006..0.024 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.022..0.022 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.019..0.020 rows=1 loops=1)
                                                                     Filter: (r_name = 'EUROPE'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=41.665..372.058 rows=60193 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=143972 read=2203
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=30.745..30.745 rows=60193 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=7 read=832
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.019..0.019 rows=1 loops=24471)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=73555
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.009..0.010 rows=1 loops=24471)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=48942
 Total runtime: 38394.194 ms
(64 rows)

COMMIT;
COMMIT
